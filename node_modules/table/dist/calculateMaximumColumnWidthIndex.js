'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var cov_qyqm9cd68 = function () {
  var path = '/Users/gajuskuizinas/Documents/dev/gajus/table/src/calculateMaximumColumnWidthIndex.js',
      hash = '879c5b124d777a0bf46104f942ca9def05c6c3af',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/gajuskuizinas/Documents/dev/gajus/table/src/calculateMaximumColumnWidthIndex.js',
    statementMap: {
      '0': {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 13,
          column: 3
        }
      },
      '1': {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 59
        }
      },
      '2': {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 50
        }
      },
      '3': {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 25,
          column: 5
        }
      },
      '4': {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 57
        }
      },
      '5': {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 24,
          column: 7
        }
      },
      '6': {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 23,
          column: 7
        }
      },
      '7': {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 37
        }
      },
      '8': {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 27,
          column: 17
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 28,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 19
          }
        },
        loc: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 25,
            column: 3
          }
        }
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 56
          },
          end: {
            line: 24,
            column: 5
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }, {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 23,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 23,
            column: 7
          }
        }, {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 23,
            column: 7
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0]
    }
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _calculateCellWidthIndex = require('./calculateCellWidthIndex');

var _calculateCellWidthIndex2 = _interopRequireDefault(_calculateCellWidthIndex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Produces an array of values that describe the largest value length (width) in every column.
 *
 * @param {Array[]} rows
 * @returns {number[]}
 */
exports.default = rows => {
  ++cov_qyqm9cd68.f[0];
  ++cov_qyqm9cd68.s[0];

  if (!rows[0]) {
    ++cov_qyqm9cd68.b[0][0];
    ++cov_qyqm9cd68.s[1];

    throw new Error('Dataset must have at least one row.');
  } else {
    ++cov_qyqm9cd68.b[0][1];
  }

  const columns = (++cov_qyqm9cd68.s[2], _lodash2.default.fill(Array(rows[0].length), 0));

  ++cov_qyqm9cd68.s[3];
  _lodash2.default.forEach(rows, row => {
    ++cov_qyqm9cd68.f[1];

    const columnWidthIndex = (++cov_qyqm9cd68.s[4], (0, _calculateCellWidthIndex2.default)(row));

    ++cov_qyqm9cd68.s[5];
    _lodash2.default.forEach(columnWidthIndex, (valueWidth, index0) => {
      ++cov_qyqm9cd68.f[2];
      ++cov_qyqm9cd68.s[6];

      if (columns[index0] < valueWidth) {
        ++cov_qyqm9cd68.b[1][0];
        ++cov_qyqm9cd68.s[7];

        columns[index0] = valueWidth;
      } else {
        ++cov_qyqm9cd68.b[1][1];
      }
    });
  });

  ++cov_qyqm9cd68.s[8];
  return columns;
};

module.exports = exports['default'];