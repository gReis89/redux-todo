'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var cov_2in591hdkb = function () {
  var path = '/Users/gajuskuizinas/Documents/dev/gajus/table/src/wrapWord.js',
      hash = 'b859c23198f963a8e98116f29b9c80fef9051c0e',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/gajuskuizinas/Documents/dev/gajus/table/src/wrapWord.js',
    statementMap: {
      '0': {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 13,
          column: 18
        }
      },
      '1': {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 19
        }
      },
      '2': {
        start: {
          line: 18,
          column: 13
        },
        end: {
          line: 18,
          column: 102
        }
      },
      '3': {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 37,
          column: 33
        }
      },
      '4': {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 30
        }
      },
      '5': {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      '6': {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 23
        }
      },
      '7': {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 51
        }
      },
      '8': {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 28
        }
      },
      '9': {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 38
        }
      },
      '10': {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 37
        }
      },
      '11': {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 23
        }
      },
      '12': {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 39,
          column: 16
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 40,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0
    },
    f: {
      '0': 0
    },
    b: {
      '0': [0, 0]
    }
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _sliceAnsi = require('slice-ansi');

var _sliceAnsi2 = _interopRequireDefault(_sliceAnsi);

var _stringWidth = require('string-width');

var _stringWidth2 = _interopRequireDefault(_stringWidth);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {string} input
 * @param {number} size
 * @returns {Array}
 */
exports.default = (input, size) => {
  ++cov_2in591hdkb.f[0];

  let subject;

  ++cov_2in591hdkb.s[0];
  subject = input;

  const chunks = (++cov_2in591hdkb.s[1], []);

  // https://regex101.com/r/gY5kZ1/1
  const re = (++cov_2in591hdkb.s[2], new RegExp('(^.{1,' + size + '}(\\s+|$))|(^.{1,' + (size - 1) + '}(\\\\|/|_|\\.|,|;|-))'));

  ++cov_2in591hdkb.s[3];
  do {
    let chunk;

    ++cov_2in591hdkb.s[4];
    chunk = subject.match(re);

    ++cov_2in591hdkb.s[5];
    if (chunk) {
      ++cov_2in591hdkb.b[0][0];
      ++cov_2in591hdkb.s[6];

      chunk = chunk[0];

      ++cov_2in591hdkb.s[7];
      subject = (0, _sliceAnsi2.default)(subject, (0, _stringWidth2.default)(chunk));

      ++cov_2in591hdkb.s[8];
      chunk = _lodash2.default.trim(chunk);
    } else {
      ++cov_2in591hdkb.b[0][1];
      ++cov_2in591hdkb.s[9];

      chunk = (0, _sliceAnsi2.default)(subject, 0, size);
      ++cov_2in591hdkb.s[10];
      subject = (0, _sliceAnsi2.default)(subject, size);
    }

    ++cov_2in591hdkb.s[11];
    chunks.push(chunk);
  } while ((0, _stringWidth2.default)(subject));

  ++cov_2in591hdkb.s[12];
  return chunks;
};

module.exports = exports['default'];